apply plugin: 'java'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
}

def grpc_version = "1.58.0"
def protobuf_version = '3.24.3'

dependencies {
    implementation "io.grpc:grpc-netty:${grpc_version}"
    implementation "io.grpc:grpc-protobuf:${grpc_version}"
    implementation "io.grpc:grpc-stub:${grpc_version}"
    implementation "com.google.protobuf:protobuf-java:${protobuf_version}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobuf_version}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false

def createStartScripts(String mainClassName) {
    String bareName = mainClassName.substring(mainClassName.lastIndexOf('.') + 1);
    String taskName = bareName.uncapitalize();
    def newTask = tasks.register(taskName, CreateStartScripts) {
        mainClass = mainClassName
        applicationName = taskName.replaceAll('([A-Z])') { '-' + it[0].uncapitalize() }
        outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
        classpath = startScripts.classpath
    }
    application {
        applicationDistribution.into('bin') {
            from(newTask)
            fileMode = 0755
        }
    }
}

createStartScripts('HelloWorldClient')
createStartScripts('HelloWorldServer')
